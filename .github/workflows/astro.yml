name: Deploy Astro Project to VPS

on:
  push:
    branches:
      - production   # or main, depending on your setup

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      # 3️⃣ Install dependencies and build Astro
      - name: Install and Build Astro
        run: |
          npm ci
          npm run build

      # 4️⃣ Upload build files to VPS
      - name: Upload Built Files to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "dist/*"
          target: "/home/blk/landing"
          strip_components: 1
          overwrite: true
          rm: true
          port: 22

      # 5️⃣ Restart Nginx or your app process
      - name: Restart Services on VPS
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e

            echo "🔍 Checking Node.js and npm..."
            # Load NVM and Node
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            
            # Use the installed Node version
            nvm use 22

            # Ensure backend directory exists
            if [ ! -d /home/blk/addition ]; then
              echo "Cloning repo for the first time..."
              git clone git@github.com:${{ github.repository }} /home/blk/addition
            fi

            cd ~/addition
            echo "Pulling latest code..."
            git pull origin main

            echo "Installing dependencies..."
            npm ci

            echo "Building project..."
            npm run build

            echo "Restarting with PM2..."
            if pm2 describe addition > /dev/null; then
              pm2 restart addition
            else
              pm2 start "npm run start" --name addition
            fi

            pm2 save
