---
// No server-side code is needed here. 
// The form will post to the API route.
---
<div class="min-h-screen bg-slate-900 text-white py-16 px-4 sm:px-6 lg:px-8 font-SpaceGrotesk hero-background">
  <style>
    .hero-background {
      background-image: radial-gradient(rgba(255, 255, 255, 0.1) 1px, transparent 1px);
      background-size: 2rem 2rem;
    }
    /* Custom checkbox styles for dark theme */
    .custom-checkbox {
      appearance: none;
      background-color: transparent;
      border: 2px solid #475569;
      border-radius: 0.375rem;
      width: 1.25rem;
      height: 1.25rem;
      cursor: pointer;
      position: relative;
      transition: all 0.2s ease-in-out;
    }
    .custom-checkbox:checked {
      background-color: #3b82f6;
      border-color: #3b82f6;
    }
    .custom-checkbox:checked::after {
      content: 'âœ“';
      font-size: 0.875rem;
      color: white;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }
    .custom-checkbox:focus {
      outline: 2px solid transparent;
      outline-offset: 2px;
      box-shadow: 0 0 0 2px #1e293b, 0 0 0 4px #3b82f6;
    }
  </style>

  <div class="max-w-4xl mx-auto">
    <div class="flex justify-center mb-12">
    </div>

    <div class="text-center mb-12">
      <h1 class="text-4xl font-bold text-slate-100">Let's Build Your Vision</h1>
      <p class="mt-4 text-lg text-slate-400 max-w-2xl mx-auto">
        This form helps us understand your project's scope and goals. The more detail you provide, the better we can tailor our proposal to your needs.
      </p>
    </div>

    <form id="req-form" method="POST" action="/api/send-email" class="bg-slate-800/50 backdrop-blur-lg border border-slate-700 shadow-2xl shadow-blue-500/10 rounded-2xl p-8 sm:p-10 space-y-8">
      
      <fieldset class="space-y-6 border-b border-slate-700 pb-8">
        <legend class="text-xl font-semibold text-white">Project Overview</legend>
        
        <div>
          <label for="email" class="block text-sm font-medium text-slate-300 mb-2">
            Your Email <span class="text-red-400">*</span>
          </label>
          <input type="email" name="email" id="email" required class="mt-1 block w-full bg-slate-700/50 border border-slate-600 text-white rounded-md shadow-sm focus:border-blue-500 focus:ring-2 focus:ring-blue-500 sm:text-sm h-12 px-4" placeholder="your@email.com" />
        </div>

        <div>
          <label for="projectName" class="block text-sm font-medium text-slate-300 mb-2">
            Project / Company Name
          </label>
          <input type="text" name="projectName" id="projectName" class="mt-1 block w-full bg-slate-700/50 border border-slate-600 text-white rounded-md shadow-sm focus:border-blue-500 focus:ring-2 focus:ring-blue-500 sm:text-sm h-12 px-4" placeholder="e.g., Innovate Inc." />
        </div>

        <div>
          <label for="projectDescription" class="block text-sm font-medium text-slate-300 mb-2">
            Describe the project
          </label>
          <textarea name="projectDescription" id="projectDescription" rows="5" class="mt-1 block w-full bg-slate-700/50 border border-slate-600 text-white rounded-md shadow-sm focus:border-blue-500 focus:ring-2 focus:ring-blue-500 sm:text-sm p-4" placeholder="Please provide as much detail as possible about your project requirements..."></textarea>
        </div>

        <div>
            <label for="projectType" class="block text-sm font-medium text-slate-300 mb-3">Project Type</label>
            <div class="mt-2 grid grid-cols-2 sm:grid-cols-3 gap-4">
              {['Landing Page', 'Web Application', 'Mobile App', 'AI & Automation', 'API Development', 'E-commerce Platform', 'CRM', 'CMS', 'Other'].map(type => (
                <div class="flex items-center">
                  <input type="checkbox" name="projectType" id={type.toLowerCase().replace(/ /g, '-')} value={type} class="custom-checkbox mr-3">
                  <label for={type.toLowerCase().replace(/ /g, '-')} class="text-sm text-slate-300">{type}</label>
                </div>
              ))}
            </div>
        </div>
      </fieldset>

      <fieldset class="space-y-6 border-b border-slate-700 pb-8">
        <legend class="text-xl font-semibold text-white">Technical Details (Optional)</legend>
        
        <div>
          <label for="features" class="block text-sm font-medium text-slate-300 mb-2">Key Features</label>
          <input type="text" name="features" id="features" class="mt-1 block w-full bg-slate-700/50 border border-slate-600 text-white rounded-md shadow-sm focus:border-blue-500 focus:ring-2 focus:ring-blue-500 sm:text-sm h-12 px-4" placeholder="e.g., User authentication, dashboard, payments" />
        </div>

        <div>
          <label for="preferredTechStack" class="block text-sm font-medium text-slate-300 mb-2">Preferred Tech Stack</label>
          <input type="text" name="preferredTechStack" id="preferredTechStack" class="mt-1 block w-full bg-slate-700/50 border border-slate-600 text-white rounded-md shadow-sm focus:border-blue-500 focus:ring-2 focus:ring-blue-500 sm:text-sm h-12 px-4" placeholder="e.g., React, Node.js, Python, etc." />
        </div>

        <div>
          <label for="thirdPartyIntegration" class="block text-sm font-medium text-slate-300 mb-2">Third-party Integrations</label>
          <input type="text" name="thirdPartyServices" id="thirdPartyServices" class="mt-1 block w-full bg-slate-700/50 border border-slate-600 text-white rounded-md shadow-sm focus:border-blue-500 focus:ring-2 focus:ring-blue-500 sm:text-sm h-12 px-4" placeholder="e.g., Stripe, Google Maps, Twilio" />
        </div>
      </fieldset>

      <fieldset class="space-y-6">
        <legend class="text-xl font-semibold text-white">Your Contact Information</legend>
        <div>
          <label for="contactName" class="block text-sm font-medium text-slate-300 mb-2">Contact Name</label>
          <input type="text" name="contactName" id="contactName" class="mt-1 block w-full bg-slate-700/50 border border-slate-600 text-white rounded-md shadow-sm focus:border-blue-500 focus:ring-2 focus:ring-blue-500 sm:text-sm h-12 px-4" placeholder="Enter your name" />
        </div>

        <div>
          <label for="contactInfo" class="block text-sm font-medium text-slate-300 mb-2">Contact Info</label>
          <input type="text" name="contactInfo" id="contactInfo" class="mt-1 block w-full bg-slate-700/50 border border-slate-600 text-white rounded-md shadow-sm focus:border-blue-500 focus:ring-2 focus:ring-blue-500 sm:text-sm h-12 px-4" placeholder="Phone number or other contact method" />
        </div>
      </fieldset>

      <div class="pt-6">
        <div id="form-status" class="text-center text-sm text-slate-400 mb-4 h-5"></div>
        <button type="submit" class="w-full rounded-lg bg-blue-600 px-8 py-4 text-lg font-semibold text-white transition-all duration-300 hover:bg-blue-700 hover:shadow-lg hover:shadow-blue-500/30 hover:-translate-y-0.5">
          Submit Project Requirements
        </button>
      </div>
    </form>

    <p class="text-center text-sm text-slate-500 mt-8">
      We respect your privacy. The information you provide will only be used to prepare your project proposal.
    </p>
  </div>
</div>

<script is:inline>
  const form = document.getElementById('req-form');
  const statusEl = document.getElementById('form-status');
  const submitButton = form?.querySelector('button[type="submit"]');

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    if (!statusEl || !submitButton) return;
    
    statusEl.textContent = 'Submitting...';
    submitButton.disabled = true;
    submitButton.classList.add('opacity-70', 'cursor-not-allowed');
    
    try {
      const resp = await fetch(form.action, { 
        method: 'POST', 
        body: new FormData(form) 
      });
      
      const data = await resp.json().catch(() => ({}));

      if (resp.ok && data.ok) {
        statusEl.textContent = 'Thank you! We have received your submission and will be in touch shortly.';
        statusEl.classList.remove('text-red-400');
        statusEl.classList.add('text-green-400');
        form.reset();
      } else {
        throw new Error(data?.error || 'An unknown error occurred.');
      }
    } catch (error) {
        statusEl.textContent = `Submission failed: ${error.message}`;
        statusEl.classList.remove('text-green-400');
        statusEl.classList.add('text-red-400');
    } finally {
        submitButton.disabled = false;
        submitButton.classList.remove('opacity-70', 'cursor-not-allowed');
    }
  });
</script>
